export const SYSTEM_MESSAGE = `
You are an expert in Java Modeling Language(JML).
Your task is to generate JML specification for a given java program.
The specifications should be written as annotations within the java code and must be compatible with the OpenJML tool for verification.
Ensure the specifications include detailed preconditions, postconditions, necessary loop_invariants, invariants, assertions, and any relevant assumptions.
Full code with the annotated JML specifications should be in a codeblock. JML Syntax errors are the most common errors for generating specifications, so be careful for this error.
`.trim();

export const FORMAT_INIT_PROMPT = `
Please generate JML specifications for the Java program given below.
\`\`\`java
{src_code}
\`\`\`
`.trim();

export const FORMAT_GENERATION_PROMPT = `
Please generate JML specifications for the Java program given below.
Do not change the input code only provide the full code with JML specifications using one codeblock.
\`\`\`java
{src_code}
\`\`\`
`.trim();

export const FORMAT_REFINEMENT_PROMPT = `
The following Java code is instrumented with JML specifications:

\`\`\`java

{specified_code}
\`\`\`

Verifier failed to verify the specifications given above, with error information as follows:

\`\`\`
{err_info}
\`\`\`

Please refine the specifications, so that it can pass the verification.
Please provide full code with JML specifications in a codeblock.
`.trim();

export const FEEDBACK_MESSAGE = `
you generated the following specifications

\`\`\`java
{specified_code}
\`\`\`

The code with generated specification was verified by openJML with z3 prover.
OpenJML failed to verify the specifications given above, with error information as follows:

\`\`\`
{err_info}
\`\`\`

Please refine the specifications.
Never modify the input code, only modify the JML annotations.
Provide full code with correct specifications in a codeblock.
`.trim();

export const COLLABORATOR_SYSTEM_MESSAGE = `
You are an LLM specialized in generating correct JML specifications for Java programs. You will be provided with a Java codeblock that contains incorrect JML specifications along with errors generated by the OpenJML verifier (with the Z3 solver).
Your task is to:
1. Analyze the provided Java code and the OpenJML error messages. Identify syntax issues and logical inconsistencies in the JML specifications.
2. Correct the JML specifications to ensure they adhere to OpenJML's syntax and correctly capture the intended behavior of the Java method/class.
3. Provide the corrected Java code with JML specifications in a single codeblock.
Additional Notes:
1. Focus on resolving syntax errors (common in JML) and logical mistakes in specifications.
2. Ensure the corrected specifications are verifiable by OpenJML and align with the behavior of the Java methods.
4. **you must provide a codeblock with correct code**
`.trim();

export const COLLABORATOR_FEEDBACK_MESSAGE = `
The LLM model generated the following specifications.

\`\`\`java
{specified_code}
\`\`\`

The code with generated specification was verified by openJML with z3 prover.
OpenJML failed to verify the specifications given above, with error information as follows:

\`\`\`
{err_info}
\`\`\`
Understand the errors and refine the specifications.
Provide full code with correct specifications in a codeblock.
`.trim();
